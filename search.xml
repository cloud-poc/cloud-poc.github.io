<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>spring batch - single process &amp; remote partitioning(multi instances)</title>
      <link href="/2019/07/21/Spring-batch-01-single-process-demo/index/"/>
      <url>/2019/07/21/Spring-batch-01-single-process-demo/index/</url>
      
        <content type="html"><![CDATA[<p>Spring batch是轻量级，全面的批处理框架，旨在开发对企业系统日常运营至关重要的强大批处理应用程序。</p><p>Spring Batch负责大量记录，包括日志记录/跟踪，事务管理，作业处理统计，作业重启，跳过和资源管理。 它还提供更高级的技术服务和功能，通过优化和分区技术实现极高容量和高性能的批处理作业。 简单和复杂的大批量批处理作业可以高度可扩展的方式利用框架来处理大量信息。</p><p>关于spring batch的细节介绍，请参加<a href="https://spring.io/projects/spring-batch" target="_blank" rel="noopener">Spring batch</a>官网，本文主要是记录一个poc的过程，主要包含单个实例应用和远程分析多实例处理的cases。</p><p>模拟demo的用户场景：<br>定时处理多个系统输出的csv文件，然后跑批处理到数据到DB，简要架构图如下:<br><img src="//cloud-poc.github.io/2019/07/21/Spring-batch-01-single-process-demo/index/20190721193530.png" alt></p><h3 id="单个实例处理-且单个文件"><a href="#单个实例处理-且单个文件" class="headerlink" title="单个实例处理(且单个文件)"></a>单个实例处理(且单个文件)</h3><p>通过cron job定时调度batch job，整个job由两个step组成的一个flow，step1 - 清理目标数据库表(模拟场景，可能是数据备份，建立新的day表等); step2 - 加载文件，解析数据内容并转化为java对象,经processor处理，后倒入db存储.<br>sequence diagram:<br><img src="//cloud-poc.github.io/2019/07/21/Spring-batch-01-single-process-demo/index/single-process-sequence.png" alt><br>主要配置文件  </p><h4 id="SingleProcessConfiguration"><a href="#SingleProcessConfiguration" class="headerlink" title="SingleProcessConfiguration"></a>SingleProcessConfiguration</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.akj.batch.configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.akj.batch.constant.Constant;</span><br><span class="line"><span class="keyword">import</span> org.akj.batch.entity.Person;</span><br><span class="line"><span class="keyword">import</span> org.akj.batch.listener.CustomJobExcecutionListener;</span><br><span class="line"><span class="keyword">import</span> org.akj.batch.processor.PersonItemProcessor;</span><br><span class="line"><span class="keyword">import</span> org.akj.batch.repository.PeopleRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.Job;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.Step;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.StepContribution;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.configuration.<span class="keyword">annotation</span>.EnableBatchProcessing;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.configuration.<span class="keyword">annotation</span>.JobBuilderFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.configuration.<span class="keyword">annotation</span>.StepBuilderFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.launch.support.RunIdIncrementer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.scope.context.ChunkContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.step.tasklet.Tasklet;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.item.<span class="keyword">data</span>.RepositoryItemWriter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.item.<span class="keyword">data</span>.builder.RepositoryItemWriterBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.item.file.FlatFileItemReader;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.item.file.builder.FlatFileItemReaderBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.repeat.RepeatStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.propertyeditors.CustomDateEditor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.FileSystemResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.task.SimpleAsyncTaskExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.task.TaskExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyEditor;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.text.DateFormat;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableBatchProcessing</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleSourceConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> JobBuilderFactory jobBuilderFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> StepBuilderFactory stepBuilderFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PeopleRepository repository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;batch.job.name&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String jobName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;batch.job.chunk.size&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> int chunkSize;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;batch.job.input.path&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String inputFolder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> FlatFileItemReader&lt;Person&gt; reader() &#123;</span><br><span class="line">        BeanWrapperFieldSetMapper&lt;Person&gt; beanMapper = new BeanWrapperFieldSetMapper&lt;Person&gt;();</span><br><span class="line">        beanMapper.setTargetType(Person.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, PropertyEditor&gt; customEditors = new HashMap&lt;String, PropertyEditor&gt;();</span><br><span class="line">        DateFormat dateFormatter = new SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">        customEditors.put(<span class="string">"java.util.Date"</span>, new CustomDateEditor(dateFormatter, <span class="literal">false</span>));</span><br><span class="line">        beanMapper.setCustomEditors(customEditors);</span><br><span class="line">        <span class="keyword">return</span> new FlatFileItemReaderBuilder&lt;Person&gt;().name(<span class="string">"personItemReader"</span>)</span><br><span class="line">                .resource(new FileSystemResource(inputFolder + File.separatorChar + Constant.FILE_SOURCE)).delimited()</span><br><span class="line">                .names(new String[]&#123;<span class="string">"pid"</span>, <span class="string">"firstName"</span>, <span class="string">"lastName"</span>, <span class="string">"age"</span>, <span class="string">"gender"</span>, <span class="string">"dateOfBirth"</span>, <span class="string">"height"</span>,</span><br><span class="line">                        <span class="string">"weight"</span>&#125;)</span><br><span class="line">                .fieldSetMapper(beanMapper).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PersonItemProcessor processor() &#123;</span><br><span class="line">        <span class="keyword">return</span> new PersonItemProcessor();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RepositoryItemWriter&lt;Person&gt; writer() &#123;</span><br><span class="line">        <span class="keyword">return</span> new RepositoryItemWriterBuilder&lt;Person&gt;().repository(repository).methodName(<span class="string">"save"</span>).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Job importUserJob(CustomJobExcecutionListener listener, Step step1) &#123;</span><br><span class="line">        <span class="keyword">return</span> jobBuilderFactory.<span class="keyword">get</span>(jobName).incrementer(new RunIdIncrementer()).listener(listener).flow(step1).end()</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Job importUserJobflow(CustomJobExcecutionListener listener, Step step1) &#123;</span><br><span class="line">        <span class="keyword">return</span> jobBuilderFactory.<span class="keyword">get</span>(jobName).listener(listener).start(step1()).on(<span class="string">"COMPLETED"</span>).to(step2(writer()))</span><br><span class="line">                .end().build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Step step1() &#123;</span><br><span class="line">        <span class="keyword">return</span> stepBuilderFactory.<span class="keyword">get</span>(<span class="string">"step1"</span>).tasklet(new Tasklet() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception &#123;</span><br><span class="line">                jdbcTemplate.execute(Constant.TRANCATE_TABLE_SQL);</span><br><span class="line">                log.debug(<span class="string">"successfully execute sql: "</span> + Constant.TRANCATE_TABLE_SQL);</span><br><span class="line">                <span class="keyword">return</span> RepeatStatus.FINISHED;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).build();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Step step2(RepositoryItemWriter&lt;Person&gt; writer) &#123;</span><br><span class="line">        <span class="keyword">return</span> stepBuilderFactory.<span class="keyword">get</span>(<span class="string">"step2"</span>).&lt;Person, Person&gt;chunk(chunkSize).reader(reader()).processor(processor())</span><br><span class="line">                .writer(writer).taskExecutor(taskExecutor()).build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TaskExecutor taskExecutor() &#123;</span><br><span class="line">        <span class="keyword">return</span> new SimpleAsyncTaskExecutor(<span class="string">"spring batch"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ScheduledJobLancherConfiguration"><a href="#ScheduledJobLancherConfiguration" class="headerlink" title="ScheduledJobLancherConfiguration"></a>ScheduledJobLancherConfiguration</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.akj.batch.configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.Job;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.JobParameters;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.JobParametersBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.JobParametersInvalidException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.launch.JobLauncher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.launch.support.SimpleJobLauncher;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.repository.JobExecutionAlreadyRunningException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.repository.JobInstanceAlreadyCompleteException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.repository.JobRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.repository.JobRestartException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Profile;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.<span class="keyword">annotation</span>.EnableScheduling;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.<span class="keyword">annotation</span>.Scheduled;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(<span class="meta-string">"batch.scheduling.enabled"</span>)</span></span><br><span class="line"><span class="meta">@Profile(&#123;<span class="meta-string">"master"</span>&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledJobLancherConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    Job job;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;batch.job.name&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">private</span> String jobName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JobRepository repository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(<span class="meta-string">"scheduledJobLauncher"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> JobLauncher jobLauncher(JobRepository jobRepo) &#123;</span><br><span class="line">        SimpleJobLauncher simpleJobLauncher = new SimpleJobLauncher();</span><br><span class="line">        simpleJobLauncher.setJobRepository(jobRepo);</span><br><span class="line">        <span class="keyword">return</span> simpleJobLauncher;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled(cron = <span class="meta-string">"<span class="subst">$&#123;batch.job.scheduler.cron&#125;</span>"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> void perform() throws JobExecutionAlreadyRunningException, JobRestartException,</span><br><span class="line">            JobInstanceAlreadyCompleteException, JobParametersInvalidException &#123;</span><br><span class="line">        JobParameters params = new JobParametersBuilder().addString(jobName, String.valueOf(System.currentTimeMillis()))</span><br><span class="line">                .toJobParameters();</span><br><span class="line">        jobLauncher(repository).run(job, params);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件 in application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">batch:</span></span><br><span class="line"><span class="attr">  scheduling:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  partitioner:</span></span><br><span class="line"><span class="attr">    partition:</span> <span class="number">1</span> <span class="comment"># partition count, grid size</span></span><br><span class="line"><span class="attr">  job:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">importUserDataTest</span></span><br><span class="line">    <span class="string">chunk.size:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">    input:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="attr">c:/temp/source</span></span><br><span class="line"><span class="attr">      filter:</span> <span class="string">'.csv'</span></span><br><span class="line"><span class="attr">    ouput:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="attr">c:/temp/target</span></span><br><span class="line"><span class="attr">    failure:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="attr">c:/temp/failure</span></span><br><span class="line"><span class="attr">    scheduler:</span></span><br><span class="line"><span class="attr">      cron:</span> <span class="number">0</span> <span class="string">*/1</span> <span class="string">*</span> <span class="string">*</span> <span class="string">*</span> <span class="string">?</span> <span class="comment">#[s] [m] [h] [d] [m] [w] [y]</span></span><br></pre></td></tr></table></figure><p>single process可以对应大部分场景了，并且可以通过设置taskExecutor来支持多线程处理  </p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> TaskExecutor taskExecutor()&#123;</span><br><span class="line">    <span class="keyword">return</span> new SimpleAsyncTaskExecutor(<span class="string">"spring_batch"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> Step sampleStep(TaskExecutor taskExecutor) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.stepBuilderFactory.<span class="keyword">get</span>(<span class="string">"sampleStep"</span>)</span><br><span class="line">                                .&lt;String, String&gt;chunk(<span class="number">10</span>)</span><br><span class="line">                                .reader(itemReader())</span><br><span class="line">                                .writer(itemWriter())</span><br><span class="line">                                .taskExecutor(taskExecutor)</span><br><span class="line">                                .build();</span><br></pre></td></tr></table></figure><p>当数据量或者处理步骤更加复杂的场景时，JVM多线程都难以应对时，spring batch也提供了远程分块和远程分区支持，把task调度到远程instance上进行然后聚合，下面演示一个主从架构的多实例remote partition处理架构</p><h3 id="Remote-partition主从架构"><a href="#Remote-partition主从架构" class="headerlink" title="Remote partition主从架构"></a>Remote partition主从架构</h3><p>在single process的基础进行修改，保留处理流程step，并将其修改为master/slave step结构，主要流程为:  </p><ol><li>cron task trigger jobLauncher 运行job任务</li><li>运行master step任务分区并存储在DB，public Map&lt;String, ExecutionContext&gt; partition(int gridSize)</li><li>通过AMQP协议，将partitioned task(StepExecution)分派到message queue</li><li>Slave node通过监听message queue，接受partioned task，运行slave step并更新运行结果</li><li>所有step运行完成后，job complete.<br>架构如下:<br><img src="//cloud-poc.github.io/2019/07/21/Spring-batch-01-single-process-demo/index/remote-partition-diagram.png" alt></li></ol><h4 id="Partitioner-分区器"><a href="#Partitioner-分区器" class="headerlink" title="Partitioner 分区器"></a>Partitioner 分区器</h4><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">package org.akj.batch.configuration.partitioner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.akj.batch.util.PathMatchingResourcePatternResolver;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.core.partition.support.Partitioner;</span><br><span class="line"><span class="keyword">import</span> org.springframework.batch.item.ExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.<span class="keyword">factory</span>.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">Map</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicInteger;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CustomMultiResourcePartitioner</span> <span class="keyword">implements</span> <span class="title">Partitioner</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;batch.job.input.path&#125;</span>"</span>)</span><br><span class="line">private <span class="built_in">String</span> inputFolder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;batch.job.input.filter&#125;</span>"</span>)</span><br><span class="line">private <span class="built_in">String</span> fileFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;batch.partitioner.partition&#125;</span>"</span>)</span><br><span class="line">private <span class="built_in">int</span> partition;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">public <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, ExecutionContext&gt; partition(<span class="built_in">int</span> gridSize) &#123;</span><br><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>, ExecutionContext&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(gridSize);</span><br><span class="line">AtomicInteger partitionNumber = <span class="keyword">new</span> AtomicInteger(<span class="number">1</span>);</span><br><span class="line">PathMatchingResourcePatternResolver resolver = <span class="keyword">new</span> PathMatchingResourcePatternResolver();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="built_in">String</span>[] resources = resolver.getResources(inputFolder, fileFilter);</span><br><span class="line">log.info(<span class="string">"started partitioning, "</span> + resources.length + <span class="string">" resources been found as input"</span>);</span><br><span class="line">Arrays.stream(resources).forEach(filePath -&gt; &#123;</span><br><span class="line">ExecutionContext context = <span class="keyword">new</span> ExecutionContext();</span><br><span class="line">context.putString(<span class="string">"fileName"</span>, filePath);</span><br><span class="line">map.put(<span class="string">"partition"</span> + partitionNumber.getAndIncrement(), context);</span><br><span class="line">&#125;);</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">log.error(<span class="string">"system error, invalid input resource: "</span> + inputFolder + File.separatorChar + fileFilter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="AMQP配置"><a href="#AMQP配置" class="headerlink" title="AMQP配置"></a>AMQP配置</h4><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.akj.batch.configuration.partitioner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Binding;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.BindingBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Queue;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.TopicExchange;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.AsyncRabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.core.RabbitTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.amqp.outbound.AsyncAmqpOutboundGateway;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.annotation.ServiceActivator;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.channel.DirectChannel;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.channel.NullChannel;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.channel.QueueChannel;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.config.EnableIntegration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.integration.core.MessagingTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.messaging.PollableChannel;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableIntegration</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemotePartitioningAMQPConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ServiceActivator</span>(inputChannel = <span class="string">"outboundRequests"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="function">AsyncAmqpOutboundGateway <span class="title">amqpOutboundEndpoint</span><span class="params">(AsyncRabbitTemplate asyncTemplate)</span> </span>&#123;</span><br><span class="line">AsyncAmqpOutboundGateway gateway = <span class="keyword">new</span> AsyncAmqpOutboundGateway(asyncTemplate);</span><br><span class="line">gateway.setExchangeName(<span class="string">"user-service.batch"</span>);</span><br><span class="line">gateway.setRoutingKey(<span class="string">"partition.requests"</span>);</span><br><span class="line">gateway.setRequiresReply(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">log.info(<span class="string">"Created AMQP Outbound gateway---&gt; "</span> + gateway.toString());</span><br><span class="line"><span class="keyword">return</span> gateway;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">AsyncRabbitTemplate <span class="title">asyncTemplate</span><span class="params">(RabbitTemplate rabbitTemplate)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> AsyncRabbitTemplate(rabbitTemplate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">QueueChannel <span class="title">inboundRequests</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> QueueChannel();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">DirectChannel <span class="title">outboundRequests</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DirectChannel();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">PollableChannel <span class="title">outboundStaging</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> NullChannel();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">Queue <span class="title">requestQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> Queue(<span class="string">"partition.requests"</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function">Binding <span class="title">binding</span><span class="params">(Queue queue, TopicExchange exchange)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> BindingBuilder.bind(queue).to(exchange).with(<span class="string">"partition.requests"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">TopicExchange <span class="title">batch</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> TopicExchange(<span class="string">"user-service.batch"</span>, <span class="keyword">true</span>, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">MessagingTemplate <span class="title">messageTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">MessagingTemplate messagingTemplate = <span class="keyword">new</span> MessagingTemplate(outboundRequests());</span><br><span class="line">messagingTemplate.setReceiveTimeout(<span class="number">200000</span>l);</span><br><span class="line"><span class="keyword">return</span> messagingTemplate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Profile</span>(&#123;<span class="string">"slave"</span>&#125;)</span><br><span class="line">    <span class="meta">@ServiceActivator</span>(inputChannel = <span class="string">"inboundRequests"</span>, outputChannel = <span class="string">"outboundStaging"</span>, async = <span class="string">"true"</span>, poller = &#123;<span class="meta">@Poller</span>(fixedRate = <span class="string">"1000"</span>)&#125;)</span><br><span class="line">    <span class="keyword">public</span> <span class="function">StepExecutionRequestHandler <span class="title">stepExecutionRequestHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StepExecutionRequestHandler stepExecutionRequestHandler = <span class="keyword">new</span> StepExecutionRequestHandler();</span><br><span class="line">        BeanFactoryStepLocator stepLocator = <span class="keyword">new</span> BeanFactoryStepLocator();</span><br><span class="line">        stepLocator.setBeanFactory(<span class="keyword">this</span>.applicationContext);</span><br><span class="line">        stepExecutionRequestHandler.setStepLocator(stepLocator);</span><br><span class="line">        stepExecutionRequestHandler.setJobExplorer(<span class="keyword">this</span>.jobExplorer);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> stepExecutionRequestHandler;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Profile</span>(&#123;<span class="string">"slave"</span>&#125;)</span><br><span class="line">    <span class="keyword">public</span> <span class="function">AmqpInboundChannelAdapter <span class="title">inbound</span><span class="params">(SimpleMessageListenerContainer listenerContainer)</span> </span>&#123;</span><br><span class="line">        AmqpInboundChannelAdapter adapter = <span class="keyword">new</span> AmqpInboundChannelAdapter(listenerContainer);</span><br><span class="line">        adapter.setOutputChannel(inboundRequests);</span><br><span class="line">        adapter.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">SimpleMessageListenerContainer <span class="title">container</span><span class="params">(ConnectionFactory connectionFactory)</span> </span>&#123;</span><br><span class="line">        SimpleMessageListenerContainer container = <span class="keyword">new</span> SimpleMessageListenerContainer(connectionFactory);</span><br><span class="line">        container.setQueueNames(<span class="string">"partition.requests"</span>);</span><br><span class="line">        <span class="comment">// container.setConcurrency("10");</span></span><br><span class="line">        <span class="comment">// container.setConcurrentConsumers(1);</span></span><br><span class="line">        container.setErrorHandler(t -&gt; &#123;</span><br><span class="line">            log.<span class="keyword">error</span>(<span class="string">"message listener error,"</span> + t.getMessage());</span><br><span class="line">        &#125;);</span><br><span class="line">        container.setAutoStartup(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> container;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>demo中用profile进行了区分，可以主从方式，一主多从，暂时不支持mixed模式，主节点无法兼做从节点，理论上可以做到。<br>源码 - <a href="https://github.com/cloud-poc/springbatch-userservice" target="_blank" rel="noopener">https://github.com/cloud-poc/springbatch-userservice</a></p><p>参考资料:<br><a href="https://blog.51cto.com/13501268/2177746" target="_blank" rel="noopener">https://blog.51cto.com/13501268/2177746</a><br><a href="https://cloud.tencent.com/developer/article/1096337" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1096337</a><br><a href="https://asardana.com/2018/01/01/scaling-spring-batch-on-aws-with-remote-partitioning/" target="_blank" rel="noopener">https://asardana.com/2018/01/01/scaling-spring-batch-on-aws-with-remote-partitioning/</a><br><a href="https://docs.spring.io/spring-integration/docs/5.1.6.RELEASE/reference/html/#amqp" target="_blank" rel="noopener">https://docs.spring.io/spring-integration/docs/5.1.6.RELEASE/reference/html/#amqp</a><br><a href="https://www.docs4dev.com/docs/zh/spring-batch/4.1.x/reference/spring-batch-integration.html" target="_blank" rel="noopener">https://www.docs4dev.com/docs/zh/spring-batch/4.1.x/reference/spring-batch-integration.html</a>  </p>]]></content>
      
      
      <categories>
          
          <category> Microservice </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Batch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud (00) - Demo overview</title>
      <link href="/2019/07/15/Spring-Cloud-Demo-Overview/index/"/>
      <url>/2019/07/15/Spring-Cloud-Demo-Overview/index/</url>
      
        <content type="html"><![CDATA[<h3 id="Demo的介绍"><a href="#Demo的介绍" class="headerlink" title="Demo的介绍"></a>Demo的介绍</h3><p>本文主要通过一个小demo，来综合运用spring cloud系列技术，demo中主要包含如下模块/组建：</p><ol><li>Authorization service, 基于Spring Security Oauth2 + Spring Cloud Oauth2,提供集中授权服务,如Token 生成,校验等  </li><li>API gateway, edge service, 提供统一的对外访问接口，集成了oauth2 安全校验，Netflix Hystrix服务降级，依赖隔离，断路保护功能  </li><li>Service registry,基于Netflix Eureka的注册中心提供服务注册和服务发现功能  </li><li>Config service, 采用了 Spring cloud config + Spring Cloud Bus提供简单的配置中心  </li><li>Catalog service, 示例服务，模拟一个简单的商品服务目录，仅一维结构  </li><li>Inventory service, 示例服务, 模拟简单的商品库存服务</li><li>Hystrix dashboard, 聚合hystrix的metrics监控展示<a id="more"></a></li></ol><h3 id="整体架构"><a href="#整体架构" class="headerlink" title="整体架构"></a>整体架构</h3><p><img src="//cloud-poc.github.io/2019/07/15/Spring-Cloud-Demo-Overview/index/architecture.png" alt></p><h3 id="Spring-boot-项目列表"><a href="#Spring-boot-项目列表" class="headerlink" title="Spring boot 项目列表"></a>Spring boot 项目列表</h3><ol><li>authorization-service，<a href="https://github.com/cloud-poc/authorization-service" target="_blank" rel="noopener">https://github.com/cloud-poc/authorization-service</a><br>backed by mysql database</li><li>cloud-api-gateway，<a href="https://github.com/cloud-poc/api-gateway" target="_blank" rel="noopener">https://github.com/cloud-poc/api-gateway</a><br>目前主要集成了oauth2 jwt授权认证，无valid token直接reject</li><li>service-registry，<a href="https://github.com/cloud-poc/service-registry" target="_blank" rel="noopener">https://github.com/cloud-poc/service-registry</a><br>eureka 服务端，外置话了部分参数，便于在docker/docker-compose部署时根据需要配置</li><li>config-service，<a href="https://github.com/cloud-poc/config-service" target="_blank" rel="noopener">https://github.com/cloud-poc/config-service</a><br>基于spring cloud config的配置中心，后续会考虑用携程apollo替换</li><li>catalog-service， <a href="https://github.com/cloud-poc/catalog-service" target="_blank" rel="noopener">https://github.com/cloud-poc/catalog-service</a><br>模拟一个简单的商品服务目录，用到了feign和netflix robin等框架</li><li>inventory-service， <a href="https://github.com/cloud-poc/inventory-service" target="_blank" rel="noopener">https://github.com/cloud-poc/inventory-service</a></li><li>hystrix-turbine-dashboard，<a href="https://github.com/cloud-poc/hystrix-turbine-dashboard" target="_blank" rel="noopener">https://github.com/cloud-poc/hystrix-turbine-dashboard</a><br>hystrix的集中dashboard， 目前turbine stream部分还有点问题，能从mq总拿到stream信息，但是dashboard展示有问题</li><li>devops-config-service-repo， <a href="https://github.com/cloud-poc/devops-config-service-repo" target="_blank" rel="noopener">https://github.com/cloud-poc/devops-config-service-repo</a><br>服务configs目录，主要存放cloud configs和docker compose files</li><li>api-common, <a href="https://github.com/cloud-poc/api-common" target="_blank" rel="noopener">https://github.com/cloud-poc/api-common</a><br>部分common代码，如generic exception的定义和controler advice，swagger的配置</li></ol><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>主要项目都提供了docker打包的plugin，直接运行mvn clean compile jib:dockerBuild就能实现local build，如需要推送到远程docker registry，需要配置远端仓库信息。 </p><p>在gateway，catalog，inventory中都配置了调用链跟踪，抽样数据会汇总到zipkin上进行展示，目前是基于http 方式推送数据，后面会修改为rabbit mq方式推送，提高性能 </p><p>在gateway，catalog，inventory中都配置了prometheus的监控埋点，metrics会被拉取到prometheus上，并在kafana中展示，在deveops代码仓库中提供了一个简单的prometheus+alertmanager+kafana的docker compose file</p><p>logging的统一收集和分析还没有开始</p>]]></content>
      
      
      <categories>
          
          <category> Microservice </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Free CA Certs setup using Certbot + Docker + Nginx</title>
      <link href="/2019/07/14/Https-setup-using-Certbot-Docker-Nginx/index/"/>
      <url>/2019/07/14/Https-setup-using-Certbot-Docker-Nginx/index/</url>
      
        <content type="html"><![CDATA[<h4 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h4><p><strong>Let’s Encrypt</strong> is a <a href="https://en.wikipedia.org/wiki/Certificate_authority" title="Certificate authority" target="_blank" rel="noopener">certificate authority</a> that provides <a href="https://en.wikipedia.org/wiki/X.509" title="X.509" target="_blank" rel="noopener">X.509</a> <a href="https://en.wikipedia.org/wiki/Public_key_certificate" title="Public key certificate" target="_blank" rel="noopener">certificates</a> for <a href="https://en.wikipedia.org/wiki/Transport_Layer_Security" title="Transport Layer Security" target="_blank" rel="noopener">Transport Layer Security</a> (TLS) encryption at no charge,The certificate is valid for 90 days, during which renewal can take place at anytime.<br>这样我们就可以用上免费的CA cert来 安全expose我们自己的网站或者服务</p><p><strong>基本的http和https</strong>知识请阅读<a href="https://linuxstory.org/deploy-lets-encrypt-ssl-certificate-with-certbot/的‘背景知识’部分，作者讲述的非常很不错。" target="_blank" rel="noopener">https://linuxstory.org/deploy-lets-encrypt-ssl-certificate-with-certbot/的‘背景知识’部分，作者讲述的非常很不错。</a></p><h4 id="Objectives"><a href="#Objectives" class="headerlink" title="Objectives"></a>Objectives</h4><p>通过例子来demo如何生成和使用Internet Security Research Group推出的Let’s Encrypt 免费证书<br>主要涉及如下：</p><ol><li>Docker, docker-compose用来部署nginx</li><li>Certbot，用来为域名生成CA证书</li></ol><h4 id="Not-In-Scope"><a href="#Not-In-Scope" class="headerlink" title="Not In Scope"></a>Not In Scope</h4><ol><li>Docker 和docker compose的相关概念和安装，请参考<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">docker官方文档</a></li></ol><h4 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h4><h5 id="生成CA证书"><a href="#生成CA证书" class="headerlink" title="生成CA证书"></a>生成CA证书</h5><ul><li><p>安装Certbot 客户端</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="string">//dl.eff.org/certbot-auto</span></span><br><span class="line">chmod a+x <span class="string">./certbot-auto</span></span><br><span class="line"><span class="string">./certbot-auto</span> <span class="params">--help</span></span><br></pre></td></tr></table></figure></li><li><p>验证域名所有权<br> 该步骤需要启动nginx<br>a. 准备docker-compose file</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: <span class="string">'3.0'</span></span><br><span class="line"><span class="attribute">services</span>:</span><br><span class="line">  <span class="attribute">nginx</span>:</span><br><span class="line">    <span class="attribute">restart</span>: always</span><br><span class="line">    <span class="attribute">image</span>: <span class="attribute">nginx</span>:<span class="number">1.15</span>.<span class="number">6</span></span><br><span class="line">    <span class="attribute">ports</span>:</span><br><span class="line">     - <span class="number">80</span>:<span class="number">80</span></span><br><span class="line">     - <span class="number">443</span>:<span class="number">443</span></span><br><span class="line">    <span class="attribute">volumes</span>:</span><br><span class="line">     - ./conf.<span class="attribute">d</span>:/etc/nginx/conf.d</span><br><span class="line">     - ./<span class="attribute">log</span>:/var/log/nginx</span><br><span class="line">     - ./<span class="attribute">wwwroot</span>:/var/www</span><br><span class="line">     - /etc/<span class="attribute">letsencrypt</span>:/etc/letsencrypt</span><br></pre></td></tr></table></figure></li></ul><blockquote><p> <strong>Docker volume的映射关系</strong><br>./conf.d nginx的配置所在<br>./log 日志文件位置<br>./wwwroot 项目路径<br>/etc/letsencrypt CA cert的父目录</p></blockquote><p>b. nginx 配置文件 .conf.d/app.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span>   <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>   domain.com;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span><span class="regexp"> ^~</span> /.well-known/acme-challenge/ &#123;</span><br><span class="line">       <span class="attribute">default_type</span> <span class="string">"text/plain"</span>;</span><br><span class="line">       <span class="attribute">root</span>     /var/www;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> = /.well-known/acme-challenge/ &#123;</span><br><span class="line">       <span class="attribute">return</span> <span class="number">404</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>PS:<br>如上两个location配置是为了通过 Let’s Encrypt 的验证，验证域名归属</p></blockquote><p>c. 启动nginx</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@aws-techpoc-c02:~/web# ls conf.d/app.conf</span><br><span class="line">root@aws-techpoc-c02:~/web# ls wwwroot/</span><br><span class="line">index.html</span><br><span class="line">root@aws-techpoc-c02:~/web# docker-compose up -d</span><br><span class="line">Creating<span class="built_in"> network </span><span class="string">"web_default"</span> with the<span class="built_in"> default </span>driver</span><br><span class="line">Creating web_nginx_1 <span class="built_in">..</span>.</span><br><span class="line">Creating web_nginx_1 <span class="built_in">..</span>. done</span><br></pre></td></tr></table></figure><p>d. 生成Cert</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto certonly -d domain1.<span class="keyword">com</span> domain2.<span class="keyword">com</span></span><br></pre></td></tr></table></figure><p><em>该步骤过程中会自动运行和安装很多linux的以来包，不用干预，其中有两布需要注意：<br>i.选择用standalone的方式运行还是webroot，一般80端口已经备用了，无法使用standalone，所以选择webroot方式，然后输入webroot的地址，及上面指定的主机项目目录，如本例，/root/web/wwwroot<br>2.有一步要求输入邮箱地址的提示，照着输入自己的邮箱即可，顺利完成的话，屏幕上会有提示信息。<br>最后，证书成功成功后，会有如下信息:</em><br>IMPORTANT NOTES:<br> Congratulations! Your certificate and chain have been saved at<br>   /etc/letsencrypt/live/<strong>&lt;domain.com&gt;</strong>/fullchain.pem. Your cert<br>   will expire on xxxx-xx-xxxx. To obtain a new version of the<br>   certificate in the future, simply run Let’s Encrypt again.<br>至此，证书就生成好了，接下来就可以去配置nginx ssl监听了</p><h5 id="配置SSL监听-for-Nginx"><a href="#配置SSL监听-for-Nginx" class="headerlink" title="配置SSL监听 for Nginx"></a>配置SSL监听 for Nginx</h5><p>a. 修改nginx配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>   <span class="number">443</span> ssl;</span><br><span class="line">        <span class="attribute">server_name</span>  domain.com;</span><br><span class="line">        <span class="attribute">ssl_certificate</span>        /etc/letsencrypt/live/domain.com/fullchain.pem;</span><br><span class="line">        <span class="attribute">ssl_certificate_key</span>    /etc/letsencrypt/live/domain.com/privkey.pem;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">root</span> /var/www;</span><br><span class="line">            <span class="attribute">index</span> index.jsp index.html index.htm index.php;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> /proxy/ &#123;</span><br><span class="line">            <span class="attribute">root</span> /var/www;</span><br><span class="line">            <span class="attribute">index</span> index.jsp index.html index.htm index.php;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">proxy_pass</span> http://172.19.0.1:8080/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   /usr/share/nginx/html;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>   <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>   domain.com www.domain.com;</span><br><span class="line">        <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>proxy_pass 指定代理地址，注意代理地址后面有没有’/‘,区别很大</p></blockquote><p>b. [optional]准备一个测试的html，用来检测nginx配置是否正常，./wwwroot/index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">title</span>&gt;</span>TEST WebSite<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span>&gt;</span>Hello, this is a test web site<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>c. Reload nginx config</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">container</span> <span class="keyword">exec</span> &lt;<span class="keyword">container</span>&gt; nginx -s reload</span><br></pre></td></tr></table></figure><p>然后就可以去测试了，https://&lt;domain.com&gt;,如果成功可以显示那个test html page，如果有问题，请使用docker logs -f <container>,或者查看日志目录先access.log 和 error.log</container></p><h4 id="Cert-Renew"><a href="#Cert-Renew" class="headerlink" title="Cert Renew"></a>Cert Renew</h4><p>Let’s Encrypt 签发的证书有效期只有 90 天，所以需要每隔三个月就要更新一次安全证书,为了能让你的网站能被安全的保护起来，所以是非常有必要去更新cert的。certbot-auto 支持手动和自动更新两种cert更新模式，我们来测试一下这两种模式<br>首先运行测试一下能否更新,调试模式，不是真的更新</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-<span class="keyword">auto</span> renew --dry-<span class="built_in">run</span></span><br></pre></td></tr></table></figure><p>获得的结果截图如下<br><img src="//cloud-poc.github.io/2019/07/14/Https-setup-using-Certbot-Docker-Nginx/index/20190714194434.png" style="margin-left:20px"></p><p>手动更新模式：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-<span class="keyword">auto</span> renew -v</span><br></pre></td></tr></table></figure><p>自动更新模式：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./certbot-auto</span> renew <span class="params">--quiet</span> <span class="params">--no-self-upgrade</span></span><br></pre></td></tr></table></figure><blockquote><p>PS:该部分一般有运维人员集中进行处理，CA证书自动生成后还需要被加载一下去刷新，在本例中，需要运行docker container exec <container> nginx -s reload 去刷新</container></p></blockquote><p>更新后的结果展示<br><img src="//cloud-poc.github.io/2019/07/14/Https-setup-using-Certbot-Docker-Nginx/index/20190714195417.png" style="margin-left:20px"></p><p>Q&amp;A:</p><ol><li>policy-forbids-issuing-for-name-on-amazon-ec2-domain<br><a href="https://community.letsencrypt.org/t/policy-forbids-issuing-for-name-on-amazon-ec2-domain/12692/3" target="_blank" rel="noopener">issue related post</a><br>amazonaws.com happens to be on the blacklist Let’s Encrypt uses for high-risk domain names，及无法使用free cert for aws，可以考虑使用route53</li></ol><p>Related posts:<br><a href="https://linuxstory.org/deploy-lets-encrypt-ssl-certificate-with-certbot/" target="_blank" rel="noopener">https://linuxstory.org/deploy-lets-encrypt-ssl-certificate-with-certbot/</a><br><a href="https://www.jianshu.com/p/c136c7ec2572" target="_blank" rel="noopener">https://www.jianshu.com/p/c136c7ec2572</a></p>]]></content>
      
      
      <categories>
          
          <category> Infra </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Certbot </tag>
            
            <tag> Let’s Encrypt </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux network proxy setup for desktop and terminal</title>
      <link href="/2019/07/14/Linux-network-proxy-setup-desktop-and-terminal/index/"/>
      <url>/2019/07/14/Linux-network-proxy-setup-desktop-and-terminal/index/</url>
      
        <content type="html"><![CDATA[<h3 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h3><p>很多时候我们由于great firewall，我们无法访问某些网站，这时候就需要用到网络代理来应对一些比较urgent的case，本文主要会介绍如何使用Shadowsocks 和 Proxychain来 setup linux network proxy，这样在命令行下都可以起到代理和转发的作用，而不仅限于浏览器的代理。</p><h3 id="SS-server-amp-SS-local的配置"><a href="#SS-server-amp-SS-local的配置" class="headerlink" title="SS server &amp; SS local的配置"></a>SS server &amp; SS local的配置</h3><h4 id="预置条件"><a href="#预置条件" class="headerlink" title="预置条件"></a>预置条件</h4><ul><li>Install Python 3 + pip, 安装命令如下：<blockquote><p>sudo apt-get install python3-pip</p></blockquote></li></ul><p><em>如果得到no packages found - python3-pip的错误，请添加相应的apt sources. 修改/etc/apt/sources.list文件，添加如下4条source信息</em></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deb</span> http://<span class="meta">cn</span>.archive.ubuntu.com/ubuntu <span class="keyword">bionic </span>main <span class="keyword">multiverse </span>restricted universe</span><br><span class="line"><span class="symbol">deb</span> http://<span class="meta">cn</span>.archive.ubuntu.com/ubuntu <span class="keyword">bionic-updates </span>main <span class="keyword">multiverse </span>restricted universe</span><br><span class="line"><span class="symbol">deb</span> http://<span class="meta">cn</span>.archive.ubuntu.com/ubuntu <span class="keyword">bionic-security </span>main <span class="keyword">multiverse </span>restricted universe</span><br><span class="line"><span class="symbol">deb</span> http://<span class="meta">cn</span>.archive.ubuntu.com/ubuntu <span class="keyword">bionic-proposed </span>main <span class="keyword">multiverse </span>restricted universe</span><br></pre></td></tr></table></figure><ul><li>Install Shadowsocks</li><li>一台可以访问<strong>外网</strong>的云主机，Azure/AWS/Alicloud-HK等都可以<blockquote><p>sudo pip install shadowsocks</p></blockquote><h4 id="SSServer的配置和启动"><a href="#SSServer的配置和启动" class="headerlink" title="SSServer的配置和启动"></a>SSServer的配置和启动</h4>在云主机上创建sss 配置文件shadowsocks.json(推荐放置在/etc/shadowsocks/ 下面)，其内容如下：<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"server"</span>:<span class="string">"0.0.0.0"</span>,</span><br><span class="line">  <span class="attr">"server_port"</span>:<span class="string">"&#123;port&#125;"</span>,</span><br><span class="line">  <span class="attr">"local_address"</span>:<span class="string">"127.0.0.1"</span>,</span><br><span class="line">  <span class="attr">"local_port"</span>:<span class="string">"1080"</span>,</span><br><span class="line">  <span class="attr">"password"</span>:<span class="string">"&#123;password&#125;"</span>,</span><br><span class="line">  <span class="attr">"timeout"</span>:<span class="number">1000</span>,</span><br><span class="line">  <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span>,</span><br><span class="line">  <span class="attr">"fast_open"</span>:<span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>ip,port,password这三个参数是必须参数<br>配置好这个配置文件后，运行命令然SSS服务运行起来</p><blockquote><p>nohup ssserver -c /etc/shadowsocks/shadowsocks.json start &amp;</p></blockquote><h4 id="SSLocal的配置和启动"><a href="#SSLocal的配置和启动" class="headerlink" title="SSLocal的配置和启动"></a>SSLocal的配置和启动</h4><p>在配置好了服务端之后，我们就可以开始配置客户端了，客户端也需要一个基本类似的配置文件，当然了你可以在windows或者手机上用shadowsocks的客户端来实现客户端代理，这个不是本文的重点<br>在本地的linux机上创建shadowsocks.json，配置内容如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"server"</span>:<span class="string">"xxxx"</span>,</span><br><span class="line">  <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">  <span class="attr">"local_port"</span>:<span class="number">1080</span>,</span><br><span class="line">  <span class="attr">"server_port"</span>:xxxx,</span><br><span class="line">  <span class="attr">"password"</span>:<span class="string">"xxxx"</span>,</span><br><span class="line">  <span class="attr">"timeout"</span>:<span class="number">300</span>,</span><br><span class="line">  <span class="attr">"method"</span>:<span class="string">"aes-256-cfb"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成配置后，命令运行起来</p><blockquote><p>nohup sslocal -c shadowsocks.json &amp;</p></blockquote><p>到此，我们可以通过设置linux系统环境变量达到浏览器network代理的目的,这距离我们的最终目标命令行下的网络代理更近一步了</p><blockquote><p>export http_proxy=127.0.0.1:1080<br>export https_proxy=127.0.0.1:1080<br>export no_proxy=localhost, 127.0.0.1</p></blockquote><p>接下来我们进行proxychain的安装和配置</p><h3 id="Proxychain的配置"><a href="#Proxychain的配置" class="headerlink" title="Proxychain的配置"></a>Proxychain的配置</h3><h4 id="Install-proxychain"><a href="#Install-proxychain" class="headerlink" title="Install proxychain"></a>Install proxychain</h4><blockquote><p>git clone <a href="https://github.com/rofl0r/proxychains-ng" target="_blank" rel="noopener">https://github.com/rofl0r/proxychains-ng</a><br>  cd proxychains-ng<br>  ./configure –prefix=/usr –sysconfdir=/etc<br>  make<br>  make install<br>  make install-config<br>按步骤执行如上命令完成后，proxychain安装完成，并且默认的配置为：/etc/proxychains.conf</p></blockquote><h4 id="Update-proxychain的代理列表"><a href="#Update-proxychain的代理列表" class="headerlink" title="Update proxychain的代理列表"></a>Update proxychain的代理列表</h4><blockquote><p>vim /etc/proxychains.conf<br>在文件尾部增加一行：socks5    127.0.0.1  1080<br><img src="//cloud-poc.github.io/2019/07/14/Linux-network-proxy-setup-desktop-and-terminal/index/15532408-1405d25f0bcee21b.png" style="margin-left:25px"><br>现在你可以测试了，测试命令如下：<br>proxychains4 curl <a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a></p></blockquote><p>如果你能看到服务器返回了html相关的东西，说明代理是工作的，恭喜你<br>截至目前，你可以做到在命令下来代理网络了，可以应对很多的使用场景了，但是依然有场景你无法满足，例如，在某个应用的内需要走代理，前提是你无法添加proxychains4的前缀，如docker daemon里面去下载image，这时候需要一个‘全局’的代理，使到全部的流量都走代理，不管是inbound或者outbound，你会问可以做到吗？<br>答案是Yes，很简单，只需要一个命令去打开bash并在这个bash下面所有的流量都走代理</p><blockquote><p>proxychains4 -q /bin/bash</p></blockquote><p>到此为止，我们基本实现了基于浏览器代理和命令行下的全局代理，自己去试试吧，good luck</p><p>最后一点补充，可以把SS做成linux服务，这样随系统启动使用起来会更加的方便，做法如下：</p><blockquote><p>sudo vim /etc/systemd/system/shadowsocks.service<br>内容如下：<br><em>[Unit]<br>Description=Shadowsocks Client Service<br>After=network.target<br>[Service]<br>Type=simple<br>User=root<br>ExecStart=/usr/local/bin/sslocal -c /xxx/shadowsocks.json<br>        [Install]<br>WantedBy=multi-user.target</em></p></blockquote><p>开发SS的linux服务</p><blockquote><p>systemctl enable /etc/systemd/system/shadowsocks.service</p></blockquote><p>然后就可以像其他linux服务那样使用 systemctl来管理了<br>如果在上述添加SS服务的过程中遇到这个错误的话<br>/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1: undefined symbol: EVP_CIPHER<br>请修改/usr/local/lib/python3.6/dist-packages/shadowsocks/crypto/openssl.py，更新第55行和111行<br>将libcrypto.EVP_CIPHER_CTX_cleanup(self._ctx) 修改为 <label style="color:blue">libcrypto.EVP_CIPHER_CTX_reset(self._ctx)</label></p>]]></content>
      
      
      <categories>
          
          <category> Infra </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shadowsocks </tag>
            
            <tag> Proxychain </tag>
            
            <tag> Proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Harshicorp vault setup &amp; Config</title>
      <link href="/2019/07/14/Harshicorp-vault-setup-Config/index/"/>
      <url>/2019/07/14/Harshicorp-vault-setup-Config/index/</url>
      
        <content type="html"><![CDATA[<h2 id="Install-vault"><a href="#Install-vault" class="headerlink" title="Install vault"></a>Install vault</h2><ul><li>Prepare <em>docker-compose.yml</em>,  content as below (just a sample here, please don’t use it for production, there are more aspects should be considered)<a id="more"></a><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol">    consul:</span></span><br><span class="line"><span class="symbol">        container_name:</span> consul.server</span><br><span class="line"><span class="symbol">        command:</span> agent -server -bind <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> -client <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> -bootstrap-expect=<span class="number">1</span></span><br><span class="line"><span class="symbol">        image:</span> consul:latest</span><br><span class="line"><span class="symbol">        restart:</span> always</span><br><span class="line"><span class="symbol">        volumes:</span></span><br><span class="line">          - ./consul.server/config:<span class="meta-keyword">/consul/</span>config</span><br><span class="line">          - ./consul.server/data:<span class="meta-keyword">/consul/</span>data</span><br><span class="line"><span class="symbol">        ports:</span></span><br><span class="line">          - <span class="string">"9300:9300"</span></span><br><span class="line">          - <span class="string">"9500:9500"</span></span><br><span class="line">          - <span class="string">"9600:9600/udp"</span></span><br><span class="line"><span class="symbol">    vault:</span></span><br><span class="line"><span class="symbol">        container_name:</span> vault.server</span><br><span class="line"><span class="symbol">        image:</span> vault</span><br><span class="line"><span class="symbol">        ports:</span></span><br><span class="line">        - <span class="string">"8200:8200"</span></span><br><span class="line"><span class="symbol">        restart:</span> always</span><br><span class="line"><span class="symbol">        links:</span></span><br><span class="line">            - consul:consul.server</span><br><span class="line"><span class="symbol">        volumes:</span></span><br><span class="line">        - ./vault.server/config:<span class="meta-keyword">/mnt/</span>vault/config</span><br><span class="line">        - ./vault.server/data:<span class="meta-keyword">/mnt/</span>vault/data</span><br><span class="line">        - ./vault.server/logs:<span class="meta-keyword">/mnt/</span>vault/logs</span><br><span class="line">        - ./vault.server/config:<span class="meta-keyword">/vault/</span>config</span><br><span class="line">        - <span class="meta-keyword">/etc/</span>letsencrypt:<span class="meta-keyword">/etc/</span>letsencrypt</span><br><span class="line"><span class="symbol">        cap_add:</span></span><br><span class="line">        - IPC_LOCK</span><br><span class="line"><span class="symbol">        command:</span> server</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><em>consul config - config.json</em></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"datacenter"</span>: <span class="string">"data-center-1"</span>,</span><br><span class="line">  <span class="attr">"node_name"</span>: <span class="string">"master-node"</span>,</span><br><span class="line">  <span class="attr">"log_level"</span>: <span class="string">"INFO"</span>,</span><br><span class="line">  <span class="attr">"server"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"data_dir"</span>: <span class="string">"/consul/data"</span>,</span><br><span class="line">  <span class="attr">"ui"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"ports"</span>: &#123;</span><br><span class="line">    <span class="attr">"http"</span>: <span class="number">8500</span>,</span><br><span class="line">    <span class="attr">"server"</span>: <span class="number">8300</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><em>vault config - vault.hcl</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">backend &quot;consul&quot; &#123;</span><br><span class="line">        address = &quot;consul:8500&quot;</span><br><span class="line">        advertise_addr = &quot;http://consul:8300&quot;</span><br><span class="line">        scheme = &quot;http&quot;</span><br><span class="line">&#125;</span><br><span class="line">listener &quot;tcp&quot; &#123;</span><br><span class="line">    address = &quot;0.0.0.0:8200</span><br><span class="line">    tls_disable = 1</span><br><span class="line">&#125;</span><br><span class="line">disable_mlock = true</span><br></pre></td></tr></table></figure></li><li><p>Use docker-compose up -d to run these services, and check its status<br><img src="//cloud-poc.github.io/2019/07/14/Harshicorp-vault-setup-Config/index/15532408-351f3fa54f1ebc1a.png" alt><br><img src="//cloud-poc.github.io/2019/07/14/Harshicorp-vault-setup-Config/index/15532408-698c9ee3afd1d4f9.png" alt></p><h2 id="Configure-the-vault"><a href="#Configure-the-vault" class="headerlink" title="Configure the vault"></a>Configure the vault</h2><p>in #1, we created the vault container, but vault is still in uninitialized status (unsealed)</p></li><li><p>Vault init</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT \</span><br><span class="line">  https:<span class="regexp">//</span>demo.xxx.com<span class="regexp">/vault/</span>v1<span class="regexp">/sys/i</span>nit \</span><br><span class="line">  -H <span class="string">'Cache-Control: no-cache'</span> \</span><br><span class="line">  -H <span class="string">'Content-Type: application/json'</span> \</span><br><span class="line">  -H <span class="string">'Postman-Token: cb5d640a-152e-844f-cda3-5e8be4e3eec3'</span> \</span><br><span class="line">  -d <span class="string">'&#123;"secret_shares":5, "secret_threshold":2&#125;'</span></span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"keys"</span>: [</span><br><span class="line">        <span class="string">"977595193b3a8cb4ae70338859f0a7264b2757775a51cca461731b1bff4b61798f"</span>,</span><br><span class="line">        <span class="string">"9f6c61623da515b36671ca2677f5be084f670751e2da6a05d88970ebe832d6430b"</span>,</span><br><span class="line">        <span class="string">"d1f13304840d0445e23ebe7ea39d23dc6821ddcb9fc97ce5ea2c8a9e82ca132ca0"</span>,</span><br><span class="line">        <span class="string">"d49bda98c1723e659f5bb87af7774988e709ff9ad4337dc4c4851cf8a89c7dfd7f"</span>,</span><br><span class="line">        <span class="string">"dfa480970d31b18b7c7943211cdd76636f51b17a55ee2d7a6718052a50d7198847"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"keys_base64"</span>: [</span><br><span class="line">        <span class="string">"l3WVGTs6jLSucDOIWfCnJksnV3daUcykYXMbG/9LYXmP"</span>,</span><br><span class="line">        <span class="string">"n2xhYj2lFbNmccomd/W+CE9nB1Hi2moF2Ilw6+gy1kML"</span>,</span><br><span class="line">        <span class="string">"0fEzBIQNBEXiPr5+o50j3Ggh3cufyXzl6iyKnoLKEyyg"</span>,</span><br><span class="line">        <span class="string">"1JvamMFyPmWfW7h693dJiOcJ/5rUM33ExIUc+Kicff1/"</span>,</span><br><span class="line">        <span class="string">"36SAlw0xsYt8eUMhHN12Y29RsXpV7i16ZxgFKlDXGYhH"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"root_token"</span>: <span class="string">"s.nBXC2nmVs7IVLHk6zsU7ZoaT"</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li><p>Vault unseal</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">curl -X PUT \</span><br><span class="line">  https://demo.xxx.com/vault/v1/sys/unseal \</span><br><span class="line">  -H <span class="symbol">'Cache</span>-Control: no-cache' \</span><br><span class="line">  -H <span class="symbol">'Content</span>-<span class="keyword">Type</span>: application/json' \</span><br><span class="line">  -H <span class="symbol">'Postman</span>-Token: a43db86c-<span class="number">26</span>d4-de01-<span class="number">9</span>a13-eefc23857eb7' \</span><br><span class="line">  -d '&#123;<span class="string">"key"</span>: <span class="string">"n2xhYj2lFbNmccomd/W+CE9nB1Hi2moF2Ilw6+gy1kML"</span>&#125;'</span><br><span class="line">  </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"shamir"</span>,</span><br><span class="line">    <span class="string">"initialized"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"sealed"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"t"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">"n"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"progress"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"nonce"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"version"</span>: <span class="string">"1.1.0"</span>,</span><br><span class="line">    <span class="string">"migration"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"cluster_name"</span>: <span class="string">"vault-cluster-8492c510"</span>,</span><br><span class="line">    <span class="string">"cluster_id"</span>: <span class="string">"c73cee19-c9ab-81f1-9563-8fd060084370"</span>,</span><br><span class="line">    <span class="string">"recovery_seal"</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>create read/write token<br>a. create admin policy</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST <span class="tag">\</span></span><br><span class="line">  https://demo.xxx.com/vault/v1/sys/policy/admin-policy <span class="tag">\</span></span><br><span class="line">  -H 'Cache-Control: no-cache' <span class="tag">\</span></span><br><span class="line">  -H 'Content-Type: application/json' <span class="tag">\</span></span><br><span class="line">  -H 'Postman-Token: c03aae97-d6c1-fa79-f8d5-f4476fe8347a' <span class="tag">\</span></span><br><span class="line">  -H 'X-Vault-Token: s.nBXC2nmVs7IVLHk6zsU7ZoaT' <span class="tag">\</span></span><br><span class="line">  -d '&#123;"policy":"&#123;<span class="tag">\<span class="name">"</span></span>path<span class="tag">\<span class="name">"</span></span>:&#123;<span class="tag">\<span class="name">"</span></span>secret/*<span class="tag">\<span class="name">"</span></span>:&#123;<span class="tag">\<span class="name">"</span></span>capabilities<span class="tag">\<span class="name">"</span></span>:[<span class="tag">\<span class="name">"</span></span>create<span class="tag">\<span class="name">"</span></span>, <span class="tag">\<span class="name">"</span></span>read<span class="tag">\<span class="name">"</span></span>, <span class="tag">\<span class="name">"</span></span>update<span class="tag">\<span class="name">"</span></span>, <span class="tag">\<span class="name">"</span></span>delete<span class="tag">\<span class="name">"</span></span>, <span class="tag">\<span class="name">"</span></span>list<span class="tag">\<span class="name">"</span></span>]&#125;&#125;&#125;"&#125;'</span><br></pre></td></tr></table></figure></li></ul><p>b.create user policy<br>similar request as step <label style="color:red">create admin-policy</label><br>c.check the policy we created</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET \</span><br><span class="line">  https:<span class="comment">//demo.xxx.com/vault/v1/sys/policy/admin-policy \</span></span><br><span class="line">  -H 'Accept: application/json' \</span><br><span class="line">  -H 'Cache-Control: no-cache' \</span><br><span class="line">  -H 'Postman-Token: <span class="number">6874</span>a6ca-070c-8d20-f4bb-183e1ff663d1' \</span><br><span class="line">  -H 'X-Vault-Token: s.nBXC2nmVs7IVLHk6zsU7ZoaT'</span><br><span class="line">  </span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"admin-policy"</span>,</span><br><span class="line">    <span class="string">"rules"</span>: <span class="string">"&#123;\"</span>path\<span class="string">":&#123;\"</span>secrets/*\<span class="string">":&#123;\"</span>capabilities\<span class="string">":[\"</span>create\<span class="string">", \"</span>read\<span class="string">", \"</span>update\<span class="string">", \"</span>delete\<span class="string">", \"</span>list\<span class="string">"]&#125;&#125;&#125;"</span>,</span><br><span class="line">    <span class="string">"request_id"</span>: <span class="string">"51ba3350-f14d-0e3f-27b4-610b6442d296"</span>,</span><br><span class="line">    <span class="string">"lease_id"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"renewable"</span>: false,</span><br><span class="line">    <span class="string">"lease_duration"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"data"</span>: &#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"admin-policy"</span>,</span><br><span class="line">        <span class="string">"rules"</span>: <span class="string">"&#123;\"</span>path\<span class="string">":&#123;\"</span>secret/*\<span class="string">":&#123;\"</span>capabilities\<span class="string">":[\"</span>create\<span class="string">", \"</span>read\<span class="string">", \"</span>update\<span class="string">", \"</span>delete\<span class="string">", \"</span>list\<span class="string">"]&#125;&#125;&#125;"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"wrap_info"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"warnings"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"auth"</span>: <span class="literal">null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>Create Token for above two newly created policies</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">curl -<span class="type">X</span> <span class="type">POST</span> \</span><br><span class="line">  https:<span class="comment">//demo.xxx.com/vault/v1/auth/token/create \</span></span><br><span class="line">  -<span class="type">H</span> <span class="symbol">'Cache</span>-<span class="type">Control</span>: no-cache' \</span><br><span class="line">  -<span class="type">H</span> <span class="symbol">'Content</span>-<span class="type">Type</span>: application/json' \</span><br><span class="line">  -<span class="type">H</span> <span class="symbol">'Postman</span>-<span class="type">Token</span>: <span class="number">21</span>ef1963-b06d-b4ea<span class="number">-547</span>c<span class="number">-03539</span>a681ca5' \</span><br><span class="line">  -<span class="type">H</span> <span class="symbol">'X</span>-<span class="type">Vault</span>-<span class="type">Token</span>: s.nBXC2nmVs7IVLHk6zsU7ZoaT' \</span><br><span class="line">  -d '&#123;<span class="string">"policies"</span>: [<span class="string">"admin-policy"</span>]&#125;'</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"request_id"</span>: <span class="string">"a5251b70-e14c-5c56-a81e-6ad59445a44f"</span>,</span><br><span class="line">    <span class="string">"lease_id"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"renewable"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lease_duration"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"data"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"wrap_info"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"warnings"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"auth"</span>: &#123;</span><br><span class="line">        <span class="string">"client_token"</span>: <span class="string">"s.AXTHvuudLS6C4PYjSvLLabr9"</span>,</span><br><span class="line">        <span class="string">"accessor"</span>: <span class="string">"wVg70OelyhDMwa4MojtCKeZ1"</span>,</span><br><span class="line">        <span class="string">"policies"</span>: [</span><br><span class="line">            <span class="string">"admin-policy"</span>,</span><br><span class="line">            <span class="string">"default"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"token_policies"</span>: [</span><br><span class="line">            <span class="string">"admin-policy"</span>,</span><br><span class="line">            <span class="string">"default"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"metadata"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">"lease_duration"</span>: <span class="number">2764800</span>,</span><br><span class="line">        <span class="string">"renewable"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"entity_id"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"token_type"</span>: <span class="string">"service"</span>,</span><br><span class="line">        <span class="string">"orphan"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"request_id"</span>: <span class="string">"35212529-0b4c-3c50-0489-94df50a5f781"</span>,</span><br><span class="line">    <span class="string">"lease_id"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="string">"renewable"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"lease_duration"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">"data"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"wrap_info"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"warnings"</span>: <span class="literal">null</span>,</span><br><span class="line">    <span class="string">"auth"</span>: &#123;</span><br><span class="line">        <span class="string">"client_token"</span>: <span class="string">"s.7A1UuLB7aJdiGhn5Qaj2FlxN"</span>,</span><br><span class="line">        <span class="string">"accessor"</span>: <span class="string">"8H2pMpG4SnKHMgH8nr56FsUJ"</span>,</span><br><span class="line">        <span class="string">"policies"</span>: [</span><br><span class="line">            <span class="string">"default"</span>,</span><br><span class="line">            <span class="string">"user-policy"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"token_policies"</span>: [</span><br><span class="line">            <span class="string">"default"</span>,</span><br><span class="line">            <span class="string">"user-policy"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"metadata"</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="string">"lease_duration"</span>: <span class="number">2764800</span>,</span><br><span class="line">        <span class="string">"renewable"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"entity_id"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"token_type"</span>: <span class="string">"service"</span>,</span><br><span class="line">        <span class="string">"orphan"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Try to use above token to read/write data<br>$\color{red}{Admin-token}$ to put key/value, otherwise got <label style="color:red">error occurred:permission denied</label></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    curl <span class="params">-X</span> POST \</span><br><span class="line">      https:<span class="comment">//demo.xxx.com/vault/v1/secret/test \</span></span><br><span class="line">      <span class="params">-H</span> <span class="string">'Cache-Control: no-cache'</span> \</span><br><span class="line">      <span class="params">-H</span> <span class="string">'Content-Type: application/json'</span> \</span><br><span class="line">      <span class="params">-H</span> <span class="string">'Postman-Token: 0b3cd187-14fd-c94f-9198-794e71b906af'</span> \</span><br><span class="line">      <span class="params">-H</span> <span class="string">'X-Vault-Token: s.AXTHvuudLS6C4PYjSvLLabr9'</span> \ </span><br><span class="line">     </span><br><span class="line">      <span class="params">-d</span> <span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "token":"test-token"</span></span><br><span class="line"><span class="string">    &#125;'</span></span><br><span class="line">&lt;label style=<span class="string">"color:red"</span>&gt;user<span class="params">-token</span>&lt;/label&gt; <span class="keyword">to</span> get key/value</span><br><span class="line"></span><br><span class="line">    curl <span class="params">-X</span> GET \</span><br><span class="line">      https:<span class="comment">//demo.xxx.com/vault/v1/secret/test \</span></span><br><span class="line">      <span class="params">-H</span> <span class="string">'Cache-Control: no-cache'</span> \</span><br><span class="line">      <span class="params">-H</span> <span class="string">'Content-Type: application/json'</span> \</span><br><span class="line">      <span class="params">-H</span> <span class="string">'Postman-Token: 2f1e1e02-db11-5fdc-426e-ad0adc735b47'</span> \</span><br><span class="line">      <span class="params">-H</span> <span class="string">'X-Vault-Token: s.7A1UuLB7aJdiGhn5Qaj2FlxN'</span> </span><br><span class="line">    </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"request_id"</span>: <span class="string">"8a1dfacd-7514-ae7d-8133-d3295fafb394"</span>,</span><br><span class="line">        <span class="string">"lease_id"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"renewable"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">"lease_duration"</span>: <span class="number">2764800</span>,</span><br><span class="line">        <span class="string">"data"</span>: &#123;</span><br><span class="line">            <span class="string">"token"</span>: <span class="string">"test-token"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">"wrap_info"</span>: <span class="built_in">null</span>,</span><br><span class="line">        <span class="string">"warnings"</span>: <span class="built_in">null</span>,</span><br><span class="line">        <span class="string">"auth"</span>: <span class="built_in">null</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>#####Q1: no handler for route ‘secret/test’<br>check secrets engine if corresponding is enabled or not, commands:<br>a. docker exec -it <container-name> /bin/sh<br>b.set VAULT_ADDR=<a href="http://127.0.0.1:8200" target="_blank" rel="noopener">http://127.0.0.1:8200</a>, and VAULT_TOKEN={root token}<br>c. vault secrets list, to list out all secrets, by default,  kv secrets engine at: secret/ should be enabled, if not found, please move forward to #d<br>d. vault secrets enable -path=secret kv<br>e. test the secrets engine, vault kv put secret/hello foo=world excited=yes<br>f. vault kv get secret/hello, to check the data u’ve just pushed</container-name></p></li></ul><h2 id="Springboot-application-intergrates-with-Vault"><a href="#Springboot-application-intergrates-with-Vault" class="headerlink" title="Springboot application intergrates with Vault"></a>Springboot application intergrates with Vault</h2><ul><li><p>create project - <em>vault-test</em>, and import related maven dependencies</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">spring.cloud.version</span>&gt;</span>Greenwich.RELEASE<span class="tag">&lt;/<span class="name">spring.cloud.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;spring.cloud.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-vault-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-vault-config-databases<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>Prepare test data</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST \</span><br><span class="line">  https://demo.xxx.com/v1/secret/vault-test \</span><br><span class="line">  -H '<span class="keyword">Cache</span>-Control: <span class="keyword">no</span>-<span class="keyword">cache</span><span class="string">' \</span></span><br><span class="line"><span class="string">  -H '</span><span class="keyword">Content</span>-<span class="keyword">Type</span>: application/<span class="keyword">json</span><span class="string">' \</span></span><br><span class="line"><span class="string">  -H '</span>Postman-Token: <span class="number">6</span>cad13c9<span class="number">-14</span>d3<span class="number">-8260</span>-dd74<span class="number">-6</span>cef2b2ee822<span class="string">' \</span></span><br><span class="line"><span class="string">  -H '</span>X-Vault-Token: s.AXTHvuudLS6C4PYjSvLLabr9<span class="string">' \</span></span><br><span class="line"><span class="string">  -d '</span>&#123;</span><br><span class="line"><span class="string">"username"</span>:<span class="string">"Jamie"</span>,</span><br><span class="line"><span class="string">"password"</span>:<span class="string">"Hlhjjj&amp;jkjlkjklhHHJKKYUJKjTFttrdfhHg#h$$HHHH"</span></span><br><span class="line">&#125;<span class="string">'</span></span><br></pre></td></tr></table></figure></li><li><p>Configure Spring Vault in src/main/resources/bootstrap.yml</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">server</span>:</span><br><span class="line">  <span class="attribute">port</span>: <span class="number">8084</span></span><br><span class="line"></span><br><span class="line">logging.level.org.springframework.<span class="attribute">vault</span>: DEBUG</span><br><span class="line"></span><br><span class="line"><span class="attribute">spring</span>:</span><br><span class="line">  <span class="attribute">application</span>:</span><br><span class="line">    <span class="attribute">name</span>: vault-test</span><br><span class="line">spring.<span class="attribute">cloud</span>:</span><br><span class="line">    <span class="attribute">vault</span>:</span><br><span class="line">      <span class="attribute">host</span>: demo.xxx.com</span><br><span class="line">      <span class="attribute">port</span>: <span class="number">443</span></span><br><span class="line">      <span class="attribute">scheme</span>: https</span><br><span class="line">      <span class="attribute">authentication</span>: TOKEN</span><br><span class="line">      <span class="attribute">config</span>:</span><br><span class="line">          <span class="attribute">order</span>: -<span class="number">10</span></span><br><span class="line">      <span class="attribute">kv</span>:</span><br><span class="line">        <span class="attribute">application-name</span>: vault-test</span><br><span class="line">        <span class="attribute">default-context</span>: vault-test</span><br><span class="line">        <span class="attribute">backend</span>: secret</span><br><span class="line">        <span class="attribute">enabled</span>: true</span><br><span class="line">        <span class="attribute">profile-separator</span>: /</span><br><span class="line">      <span class="attribute">token</span>: s.<span class="number">7</span>A1UuLB7aJdiGhn5Qaj2FlxN</span><br></pre></td></tr></table></figure></li><li><p>Impl a controller to inject the data loaded from vault</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;username:test&#125;</span>"</span>)</span><br><span class="line">private <span class="built_in">String</span> userName;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;password:test&#125;</span>"</span>)</span><br><span class="line">private <span class="built_in">String</span> password;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/"</span>)</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line">public <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; test() &#123;</span><br><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; rsp = <span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt;();</span><br><span class="line">rsp.put(<span class="string">"userName"</span>, userName);</span><br><span class="line">rsp.put(<span class="string">"password"</span>, password);    </span><br><span class="line"><span class="keyword">return</span> rsp;</span><br><span class="line">&#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>Findings found during testing:<br><em>if change the spring.cloud.vault.config.order to a lower value, for example -100, the configs loaded from vault can take effects on spring auto-configured beans, like HikaiCP datasource, can put credentials onto vault in k/v format rather than keep these sensitive data in explicit config file, spring.datasource.username=xxx,spring.datasource.password=xxx</em></p></blockquote><ul><li>Test it<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET \</span><br><span class="line">  http:<span class="comment">//localhost:8084/ \</span></span><br><span class="line">  -H 'Cache-Control: no-cache' \</span><br><span class="line">  -H 'Postman-Token: <span class="number">9466</span>ffbc-e8d5-355f-cb2c-c<span class="number">2990</span>7a5af9d'</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"password"</span>: <span class="string">"Hlhjjj&amp;jkjlkjklhHHJKKYUJKjTFttrdfhHg#h$$HHHH"</span>,</span><br><span class="line">    <span class="string">"userName"</span>: <span class="string">"Jamie"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>you can find sources code on <a href="https://github.com/cloud-poc/springboot-vault-test" target="_blank" rel="noopener">github</a></p><p>Referenced posts:<br><a href="https://www.vaultproject.io/docs/concepts/policies.html" target="_blank" rel="noopener">https://www.vaultproject.io/docs/concepts/policies.html</a><br><a href="https://www.hashicorp.com/resources/getting-vault-enterprise-installed-running" target="_blank" rel="noopener">https://www.hashicorp.com/resources/getting-vault-enterprise-installed-running</a><br><a href="https://learn.hashicorp.com/vault/secrets-management/sm-pki-engine" target="_blank" rel="noopener">https://learn.hashicorp.com/vault/secrets-management/sm-pki-engine</a><br><a href="https://www.jianshu.com/p/267f2d9ae87e" target="_blank" rel="noopener">https://www.jianshu.com/p/267f2d9ae87e</a><br><a href="https://blog.51cto.com/7308310/2338146?source=dra" target="_blank" rel="noopener">https://blog.51cto.com/7308310/2338146?source=dra</a></p>]]></content>
      
      
      <categories>
          
          <category> Microservices </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Harshicorp </tag>
            
            <tag> Docker </tag>
            
            <tag> Microservices </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
